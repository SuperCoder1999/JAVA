package chapter17thread.thread.releaselock;

/*
    ------------ 释放锁 ------------
    一：释放锁的操作
    1. 当前线程的同步方法、同步代码块执行结束
    2. 当前线程在同步代码块、同步方法中遇到break、return
    3. 当前线程在同步代码块、同步方法中出现了未处理的Error或Exception，导致异常结束
    4. 当前线程在同步代码块、同步方法中执行了线程对象的wait()方法，当前线程暂停并释放锁。
     - 案例：上厕所，发掘需要酝酿一下，所以出来等会儿再进去

    二：不会释放锁的方法
    1. 线程执行同步代码块或同步方法时，程序调用Thread.sleep()\Thread.yield()方法暂停当前线程的执行，不会释放锁
    2. 线程执行同步代码块时，其他线程调用了该线程的suspend()方法将该方法挂起，该线程不会释放锁。
        提示：suspend()和resume()来控制线程的方法不再推荐使用，所以避免使用
 */

public class Introduce {
}
